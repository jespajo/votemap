# Lines starting with # are comments.
# Two (or more) newlines indicate the start of a new block.
# The first line of each block is a regex to be compiled. It is sandwiched by '/' chars.
# Subsequent lines in the block are strings to be tested against the compiled regex.
# We don't include the expected output in this file; we test our output against that of another regex implementation.

/xyz/
xyz
xy
xyza
xyaz
zyxyxyxyxyxz

/a(b)(123)cdef/
ab123cdef

/a*b/
ab
aab
bab
b
aa

/b(a*)b/
bab
babe
beef
baaaaaaaaaab
bb

/b(cd)*b/
bb
bcdbe
bcdcdcdb
bcdefb

/abc?def/
abdef
abcdef
abde

/lo+ng/
lng
long
loong
loooooooooooooooong
loooo

/a(b+)cd?e*f(g*)/
abcdefg
abbbbbcefggggg
abcfgggggfgg

/[abc]+/
abc
ababab
ababc
efg
abcd
ccccccccccc

/.*?([a-z0-9]).*/
abcdef
ABCDEF
a0b0c0
a0b0c0!!
!!a0b0c0!!

/hello+ ([0-9]+)/
hello 0123
hello hello
hell 23
helloooooo 234

/a.c/
abc
abbc
ac
a7c

/ab(.*)cde/
abcde
ab1235cde
ab

/abc(\S+)def/
abc def
abcd   edef
abcaaab cg  d
a:::::bcaaabcb cg  d

/tab:\t<--a tab/
not a tab:    <--a tab
tab:	<--a tab

/what/
so what!

/(\d+)/
123
0/1
9:8

/ab|cd/
ab
cd
ef

/(ab|cd)xx/
abxx
cdxx
efxx

/ab(xx)+ef/
abef
abxxef
abxxxef
abxxxxef
ababxxef

/a(..(..(.)g)h)/
abcdefgh
axxxxxgh
axxxxxxgh

/a(..(..(.)+.)*h)/
abcdefgh
abcdefghijklmh
axxh
abcdefghij

/(.*)(def...)/
abcdefdefdefghi

/(.*?)(def...)/
abcdefdefdefghi

/((..)+)(def...)/
aabcdefdefdefghi

/((..)+?)(def...)/
aabcdefdefdefghi

#
# Standard regex tests:
#

/abracadabra/
abracadabracadabra

/a...b/
abababbb

/XXXXXX/
..XXXXXX

/\)/
()

/a]/
a]a

/}/
}

/\}/
}

/\]/
]

/]/
]

/(..)*(...)*/
abcd
a

/abc/
abc
ab
defghi

/a/
aa

/a\$/
a$

/a($)/
aa

/a*(^a)/
aa

/(a|b)c|a(b|c)/
ac
#       ab # Commented out because we need to standardise how we print the results across Deno and our own module

/(a*)(b{0,1})(b{1,})b{3}/
aaabbbbbbb

/(:::1:::0:|:::1:1:0:)/
:::0:::1:::1:::0:

/(:::1:::0:|:::1:1:1:)/
:::0:::1:::1:::0:

/.*(\\XXX).*/
\XXX

/\\XXX/
\XXX

#/.*(/000).*/ # Formatting output issue
#/000

/.*(\\000).*/
\000

/\\000/
\000

#/.*(/XXX).*/ # Formatting output issue
#/XXX

#
# End standard tests. Non-standard tests below!!
#

/(cat|cathedral|ca|c)/
catheter
cathedral
colour
catnip
canape

# /(|a)*/  # Runs forever
# aaa

# /(|a)+/  # Runs forever
# aaa

/a{1}/
a
b
ba
ab

/a{2}/
a
ab
aab
bab
baab
babab
babaab
bababab
babababaa

/(a{3,}.)/
ba
baa
baaa
baaab
baabaaac
baaabaaac
baaaaaaaabaaac

/(a{3,}?.)/
bab
baab
baaab
baaaaaaab

/((a{1,}.){1,})/
bab
baab
baaab
baaaaaaaabaaaaa

/(.(.{2,4}.){2,5})/
abc
abcd
abcdef
abcdefghijkl

/([a-z]{1,2})([^a-z]{4,50}?).*([a-z]{2,})/
abc0123def
ac012345def
ac012345def
a0123033545defgajio
xyz123033545defgajio

/([a-z]{1,2})([^a-z]{4,50}).*([a-z]{2,})/
abc0123def
ac012345def
ac012345def
a0123033545defgajio
xyz123033545defgajio

/(.)((.)*?[g-l]+)/
abcdefghijklmnopqrstuvwxyz

/(.)((.|[g-x]+)*)(...)/
abcdefghijklmnopqrstuvwxyz

/([a-z0-9_\.\-]+)@([\da-z\.\-]+)\.([a-z\.]{2,5})/
abc@gmail.com
hello@hotmail.com.au
asoij

/employ(er|ee|ment|ing|able)/
employer
employee
employment
employing
employable

/(ab+c|de+f)/
abc
def
abbbcdef
abcdeeeeef

/(?<test>abc)/
abc

/((?<hellothere>(?<abc>\d*)(.*)(xyz)))/
abc1234defxyz

/x(hi??)x/
xhx
xhix
xhiiiix

/there (hello)??!/
there hello!
there hellohello!

/((?<name>(abc)|def(ghi))|(jkl)mno)|pqr/
abcdefghijklmnopqr
abc
jklmno
pqr
